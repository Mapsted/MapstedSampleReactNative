/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTStringVector.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A geographical address describing country, region, county and other information.
 * This class is deprecated and will be removed in future SDK versions. Use GeocodingAddress instead.
 * @deprecated 
 */
__attribute__ ((visibility("default"))) @interface NTAddress : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs an empty Address object.
 */
-(id)init;
/**
 * Constructs a new address from the the country, region, county and other attributes.
 * @param country The country name of the address.
 * @param region The region name of the address.
 * @param county The county name of the address.
 * @param locality The locality name of the address.
 * @param neighbourhood The neighbourhood name of the address.
 * @param street The street name of the address.
 * @param postcode The postcode of the address.
 * @param houseNumber The house number of the address.
 * @param name The name of the address.
 * @param categories The category tags describing the address.
 */
-(id)initWithCountry: (NSString*)country region: (NSString*)region county: (NSString*)county locality: (NSString*)locality neighbourhood: (NSString*)neighbourhood street: (NSString*)street postcode: (NSString*)postcode houseNumber: (NSString*)houseNumber name: (NSString*)name categories: (NTStringVector*)categories;
/**
 * Returns the country name included in the address.
 * @return The country name included in the address.
 */
-(NSString*)getCountry;
/**
 * Returns the region name included in the address.
 * @return The region name included in the address.
 */
-(NSString*)getRegion;
/**
 * Returns the county name included in the address.
 * @return The county name included in the address.
 */
-(NSString*)getCounty;
/**
 * Returns the locality (city, town, village) name included in the address.
 * @return The locality name included in the address.
 */
-(NSString*)getLocality;
/**
 * Returns the local neighbourhood name included in the address.
 * @return The neighbourhood name included in the address.
 */
-(NSString*)getNeighbourhood;
/**
 * Returns the street name included in the address.
 * @return The street name included in the address.
 */
-(NSString*)getStreet;
/**
 * Returns the postcode of the address.
 * @return The postcode of the address.
 */
-(NSString*)getPostcode;
/**
 * Returns the house number included in the address.
 * @return The house number included in the address.
 */
-(NSString*)getHouseNumber;
/**
 * Returns the name included in the address.
 * @return The name included in the address.
 */
-(NSString*)getName;
/**
 * Returns the list of category tags describing the address.
 * @return The list of category tags describing the address.
 */
-(NTStringVector*)getCategories;
/**
 * Checks for equality between this and another address object.
 * @param address The other address object.
 * @return True if equal.
 */
-(BOOL)isEqualInternal: (NTAddress*)address;
/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(int)hashInternal;
/**
 * Creates a string representation of this address object, useful for logging.
 * @return The string representation of this address object.
 */
-(NSString*)description;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

