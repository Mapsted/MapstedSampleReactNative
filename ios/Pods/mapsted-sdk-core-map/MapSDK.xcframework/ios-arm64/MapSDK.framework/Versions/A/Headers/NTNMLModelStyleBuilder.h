/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTBinaryData.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTNMLModelStyle.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTBillboardStyleBuilder.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A builder class for NMLModelStyle.
 */
__attribute__ ((visibility("default"))) @interface NTNMLModelStyleBuilder : NTBillboardStyleBuilder
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTNMLModelStyleBuilder*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Constructs a NMLModelStyleBuilder object with all parameters set to defaults.
 */
-(id)init;
/**
 * Returns the orientation mode of the model.
 * @return The orientation mode of the model.
 */
-(enum NTBillboardOrientation)getOrientationMode;
/**
 * Sets the orientation mode for the model. The default is BillboardOrientation::BILLBOARD_ORIENTATION_GROUND.
 * @param orientationMode The new orientation mode for the model.
 */
-(void)setOrientationMode: (enum NTBillboardOrientation)orientationMode;
/**
 * Returns the scaling mode of the model.
 * @return The scaling mode of the model.
 */
-(enum NTBillboardScaling)getScalingMode;
/**
 * Sets the scaling mode for the model. The default is BillboardScaling::BILLBOARD_SCALING_WORLD_SIZE.
 * @param scalingMode The new scaling mode for the model.
 */
-(void)setScalingMode: (enum NTBillboardScaling)scalingMode;
/**
 * Returns the model asset of the object.
 * @return The model asset of the object.
 */
-(NTBinaryData*)getModelAsset;
/**
 * Sets the model asset that will be used for drawing the object. By default a sphere asset is used.
 * @param modelAsset The new model assets for the object.
 */
-(void)setModelAsset: (NTBinaryData*)modelAsset;
/**
 * Builds a new instance of the NMLModelStyle object using previously set parameters.
 * @return A new NMLModelStyle object.
 */
-(NTNMLModelStyle*)buildStyle;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

