/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTTileDataSource.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTColor.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTRasterTileLayer.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A tile layer that displays an overlay hillshading. Should be used together with corresponding data source that encodes height in RGBA image.
 * The shading is based on the direction of the main light source, which can be configured using Options class.
 * Note: this class is experimental and may change or even be removed in future SDK versions.
 */
__attribute__ ((visibility("default"))) @interface NTHillshadeRasterTileLayer : NTRasterTileLayer
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTHillshadeRasterTileLayer*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Constructs a HillshadeRasterTileLayer object from a data source.
 * @param dataSource The data source from which this layer loads data.
 */
-(id)initWithDataSource: (NTTileDataSource*)dataSource;
/**
 * Returns the contrast of the hillshade overlay.
 * @return The contrast value (between 0..1). Default is 0.5.
 */
-(float)getContrast;
/**
 * Sets the contrast of the hillshade overlay.
 * @param contrast The contrast value (between 0..1).
 */
-(void)setContrast: (float)contrast;
/**
 * Returns the height scale of the hillshade overlay.
 * @return The relative height scale. Default is 1.0.
 */
-(float)getHeightScale;
/**
 * Sets the height scale of the hillshade overlay.
 * @param heightScale The relative height scale. Actual height is multiplied by this values.
 */
-(void)setHeightScale: (float)heightScale;
/**
 * Returns the shadow color of the layer.
 * @return The shadow color of the layer.
 */
-(NTColor*)getShadowColor;
/**
 * Sets the shadow color of the layer.
 * @param color The new shadow color of the layer.
 */
-(void)setShadowColor: (NTColor*)color;
/**
 * Returns the highlight color of the layer.
 * @return The highlight color of the layer.
 */
-(NTColor*)getHighlightColor;
/**
 * Sets the highlight color of the layer.
 * @param color The new highlight color of the layer.
 */
-(void)setHighlightColor: (NTColor*)color;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

