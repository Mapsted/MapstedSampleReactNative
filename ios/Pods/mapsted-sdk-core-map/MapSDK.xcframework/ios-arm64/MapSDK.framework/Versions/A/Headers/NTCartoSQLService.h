/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTVariant.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTFeatureCollection.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTProjection.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A high-level interface for Carto SQL Service.
 * The service can be used to query data from Carto databases
 * using explicit SQL queries.
 */
__attribute__ ((visibility("default"))) @interface NTCartoSQLService : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs a new CartoSQLService service instance with default settings.
 */
-(id)init;
/**
 * Returns the user account name used when accessing the online service.
 * @return The user account name used when accessing the online service.
 */
-(NSString*)getUsername;
/**
 * Sets the user account name used when accessing the online service.
 * @param username The user account name used when accessing the online service.
 */
-(void)setUsername: (NSString*)username;
/**
 * Returns the API key used when accessing the online service.
 * @return The API key used when accessing the online service.
 */
-(NSString*)getAPIKey;
/**
 * Sets the optional API key used when accessing the online service.
 * Usually this is not needed and can be left blank.
 * @param apiKey The optional API key used when accessing the online service.
 */
-(void)setAPIKey: (NSString*)apiKey;
/**
 * Returns the API endpoint template of the online service.
 * @return The API endpoint template of the online service.
 */
-(NSString*)getAPITemplate;
/**
 * Sets the API endpoint template of the online service.
 * By default cartodb.com endpoint is used. This needs to be redefined only for on-premise services.
 * @param apiTemplate The API endpoint template of the online service. For example, "https://{user}.cartodb.com"
 */
-(void)setAPITemplate: (NSString*)apiTemplate;
/**
 * Connects to the online service and performs the specified query,
 * The resulting JSON is deserialized into a Variant that is returned.
 * @param sql The SQL query to use.
 * @return The query result. If query fails, null variant is returned.
 * @throws NSException If IO error occured during the operation.
 */
-(NTVariant*)queryData: (NSString*)sql;
/**
 * Connects to the online service and performs the specified query.
 * The resulting JSON is deserialized into a FeatureCollection that is returned.
 * @param sql The SQL query to use.
 * @param proj The projection to use for transforming feature coordinates. Can be null for WGS84 coordinates.
 * @return The query result as feature collection. If query fails, null feature collection is returned.
 * @throws NSException If IO error occured during the operation.
 */
-(NTFeatureCollection*)queryFeatures: (NSString*)sql proj: (NTProjection*)proj;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

