/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTVariant.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTGeometry.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTFeature.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A feature builder for constructing individual features.
 */
__attribute__ ((visibility("default"))) @interface NTFeatureBuilder : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTFeatureBuilder*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;


/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs a FeatureBuilder with empty state.
 */
-(id)init;
/**
 * Returns the geometry of the builder.
 * @return The geometry of the builder.
 */
-(NTGeometry*)getGeometry;
/**
 * Sets the geometry of the builder.
 * @param geometry The new geometry to use for the builder.
 */
-(void)setGeometry: (NTGeometry*)geometry;
/**
 * Returns a specified property value of the builder.
 * @param key The name of the property to return.
 * @return The value of the property. If the key does not exist an empty variant is returned.
 */
-(NTVariant*)getPropertyValue: (NSString*)key;
/**
 * Sets an individual property value of the builder.
 * @param key The name of the property to set.
 * @param value The value of the property.
 */
-(void)setPropertyValue: (NSString*)key value: (NTVariant*)value;
/**
 * Builds a new feature from the state.
 * @return A new feature based on the builder state. Can be null if the geometry is not specified.
 */
-(NTFeature*)buildFeature;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

