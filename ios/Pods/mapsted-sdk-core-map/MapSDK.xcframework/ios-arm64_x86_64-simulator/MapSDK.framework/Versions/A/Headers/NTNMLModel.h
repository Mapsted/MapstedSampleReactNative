/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTBinaryData.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTMapBounds.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTMapPos.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTMapVec.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTGeometry.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTNMLModelStyle.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTBillboard.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A 3D model that can be displayed on the map.
 * 
 * NML models can be created from Collada files directly and placed anywhere on the map or converted from KMZ files.
 * NML models are optimized for fast loading and rendering.
 */
__attribute__ ((visibility("default"))) @interface NTNMLModel : NTBillboard
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTNMLModel*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Constructs a NMLModel object with the specified style and attaches it to a billboard element.
 * @param baseBillboard The billboard this model will be attached to.
 * @param style The style for this model.
 */
-(id)initWithBaseBillboard: (NTBillboard*)baseBillboard style: (NTNMLModelStyle*)style;
/**
 * Constructs a NMLModel object from a geometry object and a source model.
 * @param geometry The geometry object that defines the location of this model.
 * @param style The style for this model.
 */
-(id)initWithGeometry: (NTGeometry*)geometry style: (NTNMLModelStyle*)style;
/**
 * Constructs a NMLModel object from a map position and a source model.
 * @param pos The map position that defines the location of this model.
 * @param style The style for this model.
 */
-(id)initWithPos: (NTMapPos*)pos style: (NTNMLModelStyle*)style;
/**
 * Returns the rotation angle of this model. This is deprecated. Use getRotation instead.
 * @return The rotation angle of this model in degrees.
 * @deprecated 
 */
-(float)getRotationAngle;
/**
 * Sets the rotation angle of this model. This is deprecated. Use setRotation instead.
 * @param angle The new rotation angle in degrees.
 * @deprecated 
 */
-(void)setRotationAngle: (float)angle;
/**
 * Returns the rotation axis of this model. If rotation angle is 0, then the axis is irrelevant.
 * @return The rotation axis vector.
 */
-(NTMapVec*)getRotationAxis;
/**
 * Sets the rotation axis of this model.
 * @param axis The new axis of rotation.
 */
-(void)setRotationAxis: (NTMapVec*)axis;
/**
 * Sets the rotation of this model using an axis and an angle.
 * @param axis The axis of rotation.
 * @param angle The rotation angle in degrees.
 */
-(void)setRotation: (NTMapVec*)axis angle: (float)angle;
/**
 * Returns the scale of this model.
 * @return model The relative scale.
 */
-(float)getScale;
/**
 * Sets the scale of this model. The default is 1.
 * @param scale The relative scale of this model.
 */
-(void)setScale: (float)scale;
/**
 * Returns the style of this object.
 * @return The style that defines what this object looks like.
 */
-(NTNMLModelStyle*)getStyle;
/**
 * Sets a style for this object.
 * @param style The new style that defines what this object looks like.
 */
-(void)setStyle: (NTNMLModelStyle*)style;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

