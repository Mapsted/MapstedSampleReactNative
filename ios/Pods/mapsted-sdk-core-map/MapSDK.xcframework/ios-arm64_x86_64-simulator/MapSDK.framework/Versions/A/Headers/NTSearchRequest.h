/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif
#import "NTGeometry.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#import "NTProjection.h"
#ifdef __cplusplus
extern "C" {
#endif

/**
 * A search request description. Contains various search filters,
 * including geometry proximity test, regular expression test for all attributes
 * and a custom SQL-like search filter.
 */
__attribute__ ((visibility("default"))) @interface NTSearchRequest : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs an empty SearchRequest.
 */
-(id)init;
/**
 * Returns the string based search expression.
 * If empty, then search expression is not used.
 * @return The string based search expression.
 */
-(NSString*)getFilterExpression;
/**
 * Sets the string based search expression.
 * A various conditions based on the fields and geometry can be used.
 * For example, "name='X' OR (name='Y' AND gender IS NOT NULL)" is a valid expression,
 * assuming elements contains fields 'name' and 'gender'.
 * Note: This feature is currently in experimental state and may change in the future!
 * @param expr The string based expression to use.
 */
-(void)setFilterExpression: (NSString*)expr;
/**
 * Returns the regular expression used to search all the fields.
 * If empty, then the regular expression is not used.
 * @return The regular expression used to search all the fields.
 */
-(NSString*)getRegexFilter;
/**
 * Sets the regular expression used to search all the fields.
 * @param regex The regular expression to use.
 */
-(void)setRegexFilter: (NSString*)regex;
/**
 * Returns the geometry used for proximity search.
 * @return The geometry used for proximity search.
 */
-(NTGeometry*)getGeometry;
/**
 * Sets the geometry used for proximity search.
 * If geometry is set, then projection must be also defined.
 * @param geometry The geometry used for proximity search.
 */
-(void)setGeometry: (NTGeometry*)geometry;
/**
 * Returns the projection to use for search geometry.
 * @return The projection to use for search geometry.
 */
-(NTProjection*)getProjection;
/**
 * Sets the projection to use for search geometry.
 * @param projection The projection to use for search geometry.
 */
-(void)setProjection: (NTProjection*)projection;
/**
 * Returns the search radius for proximity search (in meters). The default is 0.
 * @return The proximity search radius in meters.
 */
-(float)getSearchRadius;
/**
 * Sets the search radius for proximity search (in meters). The default is 0.
 * @param radius The proximity search radius in meters.
 */
-(void)setSearchRadius: (float)radius;
/**
 * Creates a string representation of this request object, useful for logging.
 * @return The string representation of this request object.
 */
-(NSString*)description;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

